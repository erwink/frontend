
$ratio        : 5/3;

$fontsize     : 16;
$base         : 24;

$baseTopPad   : 5;
$baseBotPad   : 7;

$gridCols     : 18;
$gridColMin   : 4; // Min mumber of grid setps for a column

$baseHeight   : $base/$fontsize + 0rem;

$gridHeight   : $baseHeight * 2;
$gridWidth    : $gridHeight * $ratio;
$gridTopPad   : $baseTopPad/$base * $baseHeight;
$gridBotPad   : $baseBotPad/$base * $baseHeight;
$gridWidthPad : ($gridTopPad + $gridBotPad) * $ratio;

.grid-box {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: $gridTopPad $gridWidthPad $gridBotPad 0;
}
.grid-box-1 {
  @extend .grid-box;
  width:  $gridWidth;
  height: $gridHeight;
}
.grid-box-1-5 {
  @extend .grid-box;
  width:  $gridWidth * 1.5;
  height: $gridHeight * 1.5;
}
.grid-box-2 {
  @extend .grid-box;
  width:  $gridWidth * 2;
  height: $gridHeight * 2;
}
.grid-box-3 {
  @extend .grid-box;
  width:  $gridWidth * 3;
  height: $gridHeight * 3;
}
.grid-box-4 {
  @extend .grid-box;
  width:  $gridWidth * 4;
  height: $gridHeight * 4;
}

$from: $gridWidth * $gridColMin * 2;
@media only screen and (min-width : $from) {
  .grid-col {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    padding: $gridTopPad $gridWidthPad/2 $gridBotPad $gridWidthPad/2;
    float: left;
  }
}

@for $i from ($gridColMin * 2) through $gridCols {
  $from : $gridWidth * $i;
  $to : $gridWidth * ($i+1);

// last media-query needs upper bound of 'infinity':
  @if $i == $gridCols {
    $to : $gridWidth * 999;
  }
  @media only screen and (min-width : $from) and (max-width: $to) {
    #container {
      width:  $from;
    }
    $cols : floor($i/$gridColMin);
    @for $c from 1 through ($cols - 1) {
      $width : $gridColMin * $gridWidth * $c;
      .grid-col-#{$c}-#{$cols} {
        width: $width;
      }
      @if ($i % $gridColMin > 0) {
        .grid-col-greedy.grid-col-#{$c}-#{$cols} {
          width: $width + ($i % $gridColMin) * $gridWidth;
        }
      }
    }
  }
}